---
AWSTemplateFormatVersion: "2010-09-09"

Description:
  A single windows instance with Stata/MP 14 installed and a VPN connection to RDSS.

Parameters: 
  InstanceTypeParameter: 
    Type: String
    Default: t2.micro
    AllowedValues: 
      - t2.micro
      - r4.xlarge
      - r4.2xlarge
    Description: Enter t2.micro, r4.xlarge (30.5GB RAM), or r4.2xlarge (61GB RAM). Default is t2.micro.

Resources:
  Volume1:
    Type: AWS::EC2::Volume
    Properties:
      AvailabilityZone: !GetAtt Ec2Instance.AvailabilityZone
      Size: 40
      Tags:
        - Key: Project
          Value: RCS Cloud Software
        - Key: Application
          Value: Stata/MP 14

  Ec2Instance:
    Type: AWS::EC2::Instance
    Properties:
      ImageId: ami-0b587c6e
      IamInstanceProfile: Service-Catalog-User-Instance
      InstanceInitiatedShutdownBehavior: terminate
      InstanceType:
        Ref: InstanceTypeParameter
      Monitoring: true
      SecurityGroups: [All-NU-Inbound]
      Tags:
        - Key: Project
          Value: RCS Cloud Software
        - Key: Application
          Value: Stata/MP 14
      UserData:
        Fn::Base64: !Sub |
          <script>
          cfn-init.exe -v --stack ${AWS::StackName} -r Ec2Instance --region ${AWS::Region}
          </script>
    Metadata:
      AWS::CloudFormation::Init:
        configSets:
          default:
            - createScripts
            - runScripts
        createScripts:
          files:
            "C:\\Windows\\Temp\\MountDrive.ps1":
              content: !Sub |
                $diskNumber = (Get-Disk | ? {($_.OperationalStatus -eq "Offline") -and ($_."PartitionStyle" -eq "RAW") }).Number
                Initialize-Disk -Number $diskNumber -PartitionStyle "MBR"
                $part = New-Partition -DiskNumber $diskNumber -UseMaximumSize -IsActive -AssignDriveLetter
                Format-Volume -DriveLetter $part.DriveLetter -Confirm:$FALSE
        runScripts:
          commands:
            runMountDrive:
              command: "powershell.exe -Command C:\\Windows\\Temp\\MountDrive.ps1"

  Ec2InstanceVolumeAttachment:
    Type: AWS::EC2::VolumeAttachment
    Properties:
      Device: xvdf
      VolumeId: !Ref Volume1
      InstanceId: !Ref Ec2Instance

Outputs:
  InstanceDnsName:
    Value: !GetAtt Ec2Instance.PublicDnsName